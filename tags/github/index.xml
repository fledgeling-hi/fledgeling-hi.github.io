<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GitHub on Fledgeling Blogger's Blog</title><link>https://fledgeling-hi.github.io/tags/github/</link><description>Recent content in GitHub on Fledgeling Blogger's Blog</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Sun, 21 Jul 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://fledgeling-hi.github.io/tags/github/index.xml" rel="self" type="application/rss+xml"/><item><title>HugoのブログをGitHubで管理しよう (Win編)</title><link>https://fledgeling-hi.github.io/posts/github-quickstart/</link><pubDate>Sun, 21 Jul 2024 00:00:00 +0000</pubDate><guid>https://fledgeling-hi.github.io/posts/github-quickstart/</guid><description>はじめに エンジニアにとって、Git等のツールを使ったソースなどのバージョン管理は、避けては通れません。私自身も、仕事でバージョン管理システムは、なにかしらのツールで15年以上、直近5年くらいはGitを使っています。熟練度や利用頻度は担当している業務やプロジェクトにもよって人それぞれかもしれませんが、習得すべき技術であることは間違いありません。一方で、概念や用語は決して分かりやすいとは言えず、習熟コストはやや高めで、とっつきやすい技術とは言えないと感じています。
そこで、ブログの管理のような比較的身近で、興味のわきやすい題材で、GitやGitHubの操作を体験を通して習得するというのは、とても合理的なんじゃないかなと思います。 非エンジニアだけれども興味や関心のある方、まさにこれからエンジニアを目指して勉強中の方も多くいらっしゃると思いますので、わかりやすさを心がけて書いていきたいと思います。
準備 GitHub にアカウント作成 まず初めに、GitHubにアカウントを作成しておきましょう。GitHub Docsに、GitHub でのアカウントの作成 というページがありますので、そちらを参考に、無料の個人用アカウント(GitHub Free)を作成しましょう。
右上の&amp;quot;Sign up&amp;quot;です。かっこいいサイトデザインですね。
今回は個人利用を想定していますので、ウィザードが最後のほうで、&amp;ldquo;あなたのチームは何名？&amp;rdquo; と聞いてきたら、&amp;ldquo;Just me(私だけ！)&amp;rdquo; と答えてくださいね。
Git のインストールと設定 次に、自分のPC(以降、ローカルと表記します)に、Gitをインストールしましょう。 Gitの公式からWindows用のインストーラを選んでダウンロードしてください。 おそらく多くの方は、&amp;ldquo;64-bit Git for Windows Setup&amp;rdquo; を選んでおけば大丈夫だと思います。
インストールを開始すると、インストールウィザードにいろいろ聞かれて、戸惑うかもしれません。 そんな時は、Qiitaで &amp;ldquo;Git インストール&amp;rdquo; 等と検索すると、画像付きで丁寧に手順を説明されている記事がたくさんありますので、そちらを参考にすると良いと思います。
ウィザードの問いかけには、基本的にはすべてデフォルトで答えて大丈夫だと思いますが、私の場合は、以下の点を変更しました。 普段仕事等で使っている方にとっては、プロジェクト経験やお好み等によって意見が分かれるところがあるかもしれません。
Visual Studio Code(VS Code)を仕事でも利用しているため。VS Code未経験の方はぜひ試してみると良いかも。
昨今、置き換えが推奨されている用語については、新しい提案「main」を選択。
私の仕事上では、ほぼこのパターン。
なんとなく、両方チェック。使う機会があるかもしれない、、、くらいの、個人的な理由。
インストールが終わったら、Gitの設定をひとつしておきます。もしかしたら不要かもしれないのですが、GitHubへSSHでアクセスするときに備えて、認証に使うSSHキーを作成しておきましょう。
せっかくなので、先ほどインストールしたばかりのGitのツール、[Git Bash]を早速使ってみましょう。Windowsのメニューに追加されているはずですので、探して起動してください。DOS窓のような黒い画面が立ち上がりますので、次のコマンドを実行してください。
ssh-keygen ウィザードにファイルの保存先を聞かれますが、デフォルトのまま何も入力せずで良いと思います。パスフレーズは任意の文字列を入力してください（※パスフレーズは忘れないように）
ちなみに、なぜ &amp;ldquo;不要かもしれない&amp;rdquo; かと言うと、このあとの私の説明や手順では、GitHubへのアクセスはおそらくHTTPSのみのハズだからです。
GitHub Desktop のインストール 最後に、GitHub Desktopをインストールしましょう。 GitHub DocsのGitHub Desktopのインストールと認証に、とても分かりやすく書かれていると思います。セットアップ(設定方法) ～ (GitHubへの)認証までを行いましょう。
ここまでで、HugoブログをGitHubで管理するために必要なアカウントやツールの準備は終わりです。
(参考)Visual Studio Code のインストール まだ利用したことがない、という方はこの機会にぜひ触ってみてください。とても便利だと思います。公式サイトからインストーラをダウンロードできます。この記事もVS Codeを使って書いています。今後、操作や手順を説明する時の画面イメージに使うことがあると思います。
今回やることの整理 設定を始める前に、これからやりたいことをいったん整理したいと思います。今回は、今までローカル(自分のPCのこと)で保管していたHugoのブログ記事を、GitHubで(以降、リモートと表記します)で保管するところまでを目標にしています。</description></item><item><title>Hugoでブログを始めよう (Win編)</title><link>https://fledgeling-hi.github.io/posts/hugo-install-win/</link><pubDate>Tue, 16 Jul 2024 00:00:00 +0000</pubDate><guid>https://fledgeling-hi.github.io/posts/hugo-install-win/</guid><description>はじめに 新たにブログを始めるにあたっていろいろと調査した結果、Hugoでやってみることにしました。私はサーバサイドJavaのエンジニアですので、フロント側の技術や流行には正直疎いのですが、調べた中では一番とっつきやすい感じがしました。 ブログ用途でとても人気があるようですし、かっこいいテーマも多かったのでかなり魅力的でした。楽しんでやってみたいと思います！
ということで、今回は、Hugoを自分のPC(ローカル環境)にインストールするところから、ローカル環境でブログサイト(サンプル)が表示できるようになるまでを記事にしたいと思います。
なお、あらかじめお断りしておきますが、公式の手順とは少し違うやり方で進めたところもありますので、その辺りはご了承ください。もしかしたら、公式の手順でうまくいかなかった、よくわからなかった、といった方には、この記事のやり方でうまくいくかもしれませんので、参考になれば良いなと思います。
①Hugoのインストール まず、Hugoの公式サイトに行きましょう。
次に、トップページの上部メニューにあるGitHubのリンクをクリックして、GitHubのHugoのページに移動します。 ”QuickStart”も用意されているのですが、私は今回GitHubから直接プログラムをダウンロードしてインストールしました。
ここには、今までリリースされたHugoのソースやプログラムがありますので、最新のプログラムを探してダウンロードします。 右側の[Releases]をクリックして、最新のリリースプログラムのページに移動しましょう。
この記事作成時点では、v0.128.2が最新でしたので、この中から選びます。Assetsリストの下部にある[Shaw all &amp;hellip;]をクリックしてリストを全部表示し、その中から 「hugo_extended_0.128.2_windows-amd64.zip」を探してください。
ファイル名をクリックして、プログラムをダウンロードしましょう。なお、Windows用のzipファイルがいくつかありますが、ファイル名に ”extended” があるものを選んだ方が良いです。”extended” が無い方だと、動かないテーマ（この後説明します）がありました。
ダウンロードが終わったら、適当なフォルダを作成してダウンロードしたzipファイルを展開すれば、インストールは完了です！
この記事では「C:\hugo\v0.128.2」に展開したものとして説明を続けますが、違うところにインストールした場合は適宜読み替えてください。この通りでなくても動きますし、あとで変更することも可能です。
こんな感じ。
②テーマの準備 次にテーマの準備をします。Hugoの公式サイトに戻って、上部メニューのThemesのリンクをクリックしてテーマのページに移動しましょう。
この中から、これから作ろうとしている自分のサイトやブログのイメージに合った、好みのテーマを選びましょう。
このブログは Hugo blog awesome というテーマを採用しています。この後の説明は、このテーマを使って続けますので、もし迷ったらいったん同じテーマを選んでいただいても良いかもしれません。
Hugo blog awesome のページで、[Download]をクリックするとGitHubの Hugo blog awesome のページに移動します。
ここでは、[Code]-[Download ZIP]を選択して、テーマをダウンロードします。
ダウンロードが終わったら、先ほどと同様に適当なフォルダを作成して、ダウンロードしたzipファイルを展開してください。
こんな感じです。 今回は「C:\hugo\テーマ」フォルダをあらかじめ作成しておき、その中に「hugo-blog-awesome」フォルダとして展開しました。
※「hugo-blog-awesome」のフォルダ名はこの通りにしてください。この後テーマのインストールを行う時にこのフォルダ名でないとテーマが反映されません。重要です！
③サイトの作成 さて、それでは準備が整いましたので、早速サイトを作成してみましょう。
先ほどHugoをインストールしたフォルダ「C:\hugo\v0.128.2」の何もない場所で、右クリックして[ターミナルで開く]を選択してください。 うまくいかない場合は、Windowsメニューやタスクバーの検索窓から「Windows PowerShell」を実行してください。DOS窓(コマンドプロンプト)でも大丈夫です。
ここで、以下のコマンドを入力します。
.\hugo.exe new site example ”example”がこのサイトの名前になります。好きに決めて良い部分です。後から変更することもできますし、作り直すこともできますので、とりあえずこれで行きます。
これでサイトができました。 「C:\hugo\v0.128.2」の下に、「example」というフォルダが新しくできているはずです。
ここまで来たらあと一歩です。
④テーマのインストール 次はテーマのインストールを行います。
②で準備したテーマ「C:\hugo\テーマ\hugo-blog-awesome」を、③でサイトを作成した時に自動で作られた「C:\hugo\v0.128.2\example\themes」フォルダの下に、フォルダごとコピーします。 「C:\hugo\v0.128.2\example\themes\hugo-blog-awesome」となるようにコピーすればOKです。
次に、このテーマ用に作られたサイトサンプル（exampleSite）の設定ファイルやコンテンツを、「C:\hugo\v0.128.2\example」の直下にコピーします。
既に同じ名前のファイルがある旨のメッセージがでたら、「ファイルを置き換える」を選択してください。
これでテーマのインストールは終わりです。 さあ、いよいよ動かしてみましょう！
⑤サイトを表示してみよう！ 先ほど表示したターミナル(PowerShell)の画面で次のコマンドを入力します。
cd .\example .</description></item></channel></rss>